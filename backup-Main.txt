Questo è un file di backup che tiene traccia di come ho utilizzato il file Main.java per i diversi esempi, questo perchè ogni volta dovrò 
cancellare il vecchio Main per poter scrivere nuovo codice.

_____________________________________________________________________________________________________________________________________

Primo commit
Questo è il Main.java per il primo commit, quindi qualora volessi rivedere gli esempi del primo commit dovrò usare questo.

    import Cicli.Cicli;
    import ClasseMath.ClasseMath;
    import Condizioni.Condizioni;
    import Input.Input;
    import Switch.Switch;

    /*  
     *       I TIPI DI DATO IN JAVA 
     *
     *       Si dividono in dati primitivi e reference
     */

    /* 
     *       I primitivi
     * 
     *       Sono forniti da Java, iniziano con minuscola e danno solo la possibilità di memorizzare i dati
    */

    /*       Booleani       */

    boolean isOn = true;      //true o false, occupa 1 bit

    /*       Numerici       */

    byte a = 3;               //tutti i numeri compresi tra -128 e 127, occupa 1 byte
    short b = 4;              //tutti i numeri tra -32768 e 32767, occupa 2 bytes
    int c = 10;               //tutti i numeri tra -2 miliardi e 2 miliardi, occupa 4 bytes
    long d = 20l;             //tutti i numeri tra -9 quintilioni e 9 quintilioni, occupa 8 bytes, vuole la l o L
    float e = 3.5f;           //tutti i numeri con massimo 6-7 decimali, occupa 4 bytes, vuole la f
    double f = 7.95;          //tutti i numeri con massimo 15 decimali, occupa 8 bytes

    /*       Carattere      */

    char g = 'c';             //singola lettera, caratteri ASCII, numero, occupa 2 bytes, vuole il singolo apice

    /*  
    *       Le reference 
    *       Le reference sono anche fornite da Java, come String, ma le possiamo creare noi, iniziano con maiuscola e hanno metodi e 
    *       attributi che danno la possibilità di fare operazioni più complesse
    */

    /*      Carattere       */

    /*      Anche se reference è quasi considerata al pari di un dato primitivo per il suo utilizzo massiccio */
    String stringa = "ciao";  //sequenza di caratteri
    System.out.println();

    Input input = new Input();
    input.getInput();

    ClasseMath classeMath = new ClasseMath();
    classeMath.usoMath();

    Condizioni condizioni = new Condizioni();
    condizioni.condizioni();
    
    Switch switcho =  new Switch();
    switcho.usoSwitch();

    Cicli cicli = new Cicli();
    cicli.usoCicli();

_____________________________________________________________________________________________________________________________________

Secondo commit
Questo è il Main.java per il secondo commit, quindi qualora volessi rivedere gli esempi del secondo commit dovrò usare questo.

    import Array.Array;
    import Array2d.Array2d;

    Array arr = new Array();
    arr.usoArray();

    Array2d arr2d = new Array2d();
    arr2d.usoArray2d();

_____________________________________________________________________________________________________________________________________

Terzo commit
Questo è il Main.java per il terzo commit, quindi qualora volessi rivedere gli esempi del terzo commit dovrò usare questo.

    import Stringhe.Stringhe;

    Stringhe metodiStringhe = new Stringhe();
    metodiStringhe.usoStringhe();

_____________________________________________________________________________________________________________________________________

Quarto commit
Questo è il Main.java per il quarto commit, quindi qualora volessi rivedere gli esempi del quarto commit dovrò usare questo.

    import WrapperClass.WrapperClass;

    WrapperClass reference = new WrapperClass();
    reference.usoWrapperClass();

_____________________________________________________________________________________________________________________________________

Quinto commit
Questo è il Main.java per il quinto commit, quindi qualora volessi rivedere gli esempi del quinto commit dovrò usare questo.

    import ArrayListe.ArrayListe;

    ArrayListe listaDiArray = new ArrayListe();
    listaDiArray.usoArrayListe();

_____________________________________________________________________________________________________________________________________

Sesto commit
Questo è il Main.java per il sesto commit, quindi qualora volessi rivedere gli esempi del sesto commit dovrò usare questo.

    import Metodi.Metodi;

    Metodi usoDeiMetodi = new Metodi();

    //stiamo richiamando il metodo faiPasta, in questo caso abbiamo bisogno di una istanza della classe perchè il metodo è definito li
    usoDeiMetodi.preparaPasta();
    //richiamo un altro metodo come sopra e gli passo un valore come parametro
    usoDeiMetodi.preparaQualcosa("pizza");
    //richiamo un altro metodo che prende due int come parametri. La particolarità di questo metodo è che per essere chiamato non ha
    //bisogno di una istanza della classe, ma richiamiamo la classe stessa, per via della keyword static
    Metodi.addizione(2, 3); 

    Metodi.moltiValori(3, 4, 6, 7, 9, 15);    //essendo un varargs, gli posso passare quanti valori preferisco

_____________________________________________________________________________________________________________________________________

Settimo commit
Questo è il Main.java per il settimo commit, quindi qualora volessi rivedere gli esempi del settimo commit dovrò usare questo.

    import Overloads.Overloads;

    //Overloads dei metodi: stesso nome, signature diverse

    int risultatoIntInt = Overloads.addizione(3, 5);                   //addizione tra due int
    double risultatoDoubleDouble = Overloads.addizione(3.4, 5.5);      //addizione tra due double
    int risultatoIntIntInt = Overloads.addizione(3, 5, 7);             //addizione tra tre int
    double risultatoIntDouble = Overloads.addizione(3, 5.5);           //addizione tra un int e un double
    
    System.out.println(risultatoIntInt);
    System.out.println(risultatoDoubleDouble);
    System.out.println(risultatoIntIntInt);
    System.out.println(risultatoIntDouble);

_____________________________________________________________________________________________________________________________________

Ottavo commit
Questo è il Main.java per il ottavo commit, quindi qualora volessi rivedere gli esempi del ottavo commit dovrò usare questo.

    import OOP.Persona;

    /*
     * Per creare un oggetto di tipo persona bisogna dichiarare e istanziare come facevamo per i primitivi, o meglio per la reference
     * String. Osservando la scrittura sotto, a sinistra abbiamo la reference Persona seguita dal nome dell'oggetto, come facevamo per
     * String o per i primitivi. A destra invece abbiamo la keyword new seguita di nuovo da Persona, con questa scrittura stiamo
     * chiamando il costruttore, ovvero il metodo che crea l'oggetto, lo stampino. Qui il costruttore è quello di default noArgs
     */
    
    Persona persona = new Persona();

    System.out.println(persona.nome);      //posso accedere al valore perchè public

    persona.saluta();                      //posso accedere al metodo perchè public

_____________________________________________________________________________________________________________________________________

Nono commit
Questo è il Main.java per il nono commit, quindi qualora volessi rivedere gli esempi del nono commit dovrò usare questo.

    import OOP.PersonaV1;

    /*
    * Per creare un oggetto di tipo persona bisogna dichiarare e istanziare come facevamo per i primitivi, o meglio per la reference
    * String. Osservando la scrittura sotto, a sinistra abbiamo la reference Persona seguita dal nome dell'oggetto, come facevamo per
    * String o per i primitivi. A destra invece abbiamo la keyword new seguita di nuovo da Persona, con questa scrittura stiamo
    * chiamando il costruttore, ovvero il metodo che crea l'oggetto, lo stampino. Qui il costruttore è quello di default noArgs
    */

    PersonaV1 andrea = new PersonaV1("Andrea", "Ciambriello", 22, "red");
    PersonaV1 luca = new PersonaV1("Luca", "Rossi", 27, "blu");

    System.out.println(andrea.nome);      //posso accedere al valore perchè public
    System.out.println(luca.cognome);

    andrea.saluta();                      //posso accedere al metodo perchè public
    luca.saluta();

_____________________________________________________________________________________________________________________________________

Decimo commit
Questo è il Main.java per il decimo commit, quindi qualora volessi rivedere gli esempi del decimo commit dovrò usare questo.

import ToString.ToString;

    ToString usoToString = new ToString();
    usoToString.usoToString();